[{"C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\index.js":"1","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\routes.js":"2","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\login\\index.js":"3","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\register\\index.js":"4","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\repair\\index.js":"5","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\request\\index.js":"6","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\App.js":"7","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\services\\api.js":"8","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\components\\TopNav.js":"9","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\user-context.js":"10","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\reportWebVitals.js":"11","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\repairItem\\index.js":"12","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\repair\\components\\RepairCard.js":"13"},{"size":461,"mtime":1606838660535,"results":"14","hashOfConfig":"15"},{"size":1148,"mtime":1606986556247,"results":"16","hashOfConfig":"15"},{"size":4178,"mtime":1606987678384,"results":"17","hashOfConfig":"15"},{"size":5675,"mtime":1606966480641,"results":"18","hashOfConfig":"15"},{"size":1337,"mtime":1607007798516,"results":"19","hashOfConfig":"15"},{"size":5747,"mtime":1606991062950,"results":"20","hashOfConfig":"15"},{"size":149,"mtime":1606841822039,"results":"21","hashOfConfig":"15"},{"size":167,"mtime":1606741955455,"results":"22","hashOfConfig":"15"},{"size":1531,"mtime":1606980686651,"results":"23","hashOfConfig":"15"},{"size":595,"mtime":1606752876496,"results":"24","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"25","hashOfConfig":"15"},{"size":589,"mtime":1606966286885,"results":"26","hashOfConfig":"15"},{"size":995,"mtime":1607010839807,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1m3p4pi",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"35"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\index.js",[],["59","60"],"C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\routes.js",[],"C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\login\\index.js",[],["61","62"],"C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\register\\index.js",["63"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { UserContext } from \"../../user-context\";\r\nimport { Button, Form, Row, Col } from \"react-bootstrap\";\r\nimport api from \"../../services/api\";\r\n\r\nconst RegisterPage = ({ history }) => {\r\n  const { isLoggedIn } = useContext(UserContext);\r\n\r\n  useEffect(() => {\r\n    if (isLoggedIn) history.push(\"/\");\r\n    // eslint-disable-next-line\r\n  }, []);\r\n  const [register, setRegister] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    password: \"\",\r\n    email: \"\",\r\n    type: \"\",\r\n    hasError: false,\r\n    errorMessage: \"\",\r\n    success: \"\",\r\n    link: \"\",\r\n  });\r\n  const handleChange = (event) => {\r\n    const { value, name } = event.target;\r\n    setRegister({ ...register, [name]: value });\r\n  };\r\n  const handleLogin = () => {\r\n    history.push(\"/login\");\r\n  };\r\n  const handleRegister = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const { firstName, lastName, password, email, type } = register;\r\n      if (!firstName || !lastName || !password || !email || !type) {\r\n        return setRegister({\r\n          ...register,\r\n          hasError: true,\r\n          errorMessage: \"Missing required infromation!\",\r\n          success: false,\r\n          link: \"\",\r\n        });\r\n      }\r\n\r\n      const response = await api.post(\"/user/create\", {\r\n        firstName,\r\n        lastName,\r\n        email,\r\n        password,\r\n        type,\r\n      });\r\n      setRegister({\r\n        ...register,\r\n        hasError: false,\r\n        errorMessage: \"\",\r\n        success: true,\r\n        link: \"\",\r\n      });\r\n      setTimeout(() => history.push(\"/login\"), 2000);\r\n    } catch (error) {\r\n      console.log(error.response.data.message);\r\n      setRegister({\r\n        ...register,\r\n        hasError: true,\r\n        errorMessage: \"Email already exists!\",\r\n        link: \"Sign up\",\r\n        success: false,\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Row className=\"justify-content-around align-items-center h-100\">\r\n        <Col\r\n          md={12}\r\n          lg={6}\r\n          className=\"order-2 order-lg-1 border rounded p-5 shadow\"\r\n        >\r\n          <Form onSubmit={handleRegister} className=\"mx-auto\">\r\n            <Row>\r\n              <Col>\r\n                <Form.Group inline=\"true\" controlId=\"firstName\">\r\n                  <Form.Control\r\n                    onChange={handleChange}\r\n                    value={register.firstName}\r\n                    required\r\n                    name=\"firstName\"\r\n                    type=\"text\"\r\n                    placeholder=\"Firstname\"\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col>\r\n                <Form.Group inline=\"true\" controlId=\"lastName\">\r\n                  <Form.Control\r\n                    onChange={handleChange}\r\n                    value={register.lastName}\r\n                    required\r\n                    name=\"lastName\"\r\n                    type=\"text\"\r\n                    placeholder=\"Lastname\"\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n            <Form.Group inline=\"true\" controlId=\"email\">\r\n              <Form.Control\r\n                required\r\n                onChange={handleChange}\r\n                value={register.email}\r\n                name=\"email\"\r\n                type=\"email\"\r\n                placeholder=\"Email\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group inline=\"true\" controlId=\"password\">\r\n              <Form.Control\r\n                required\r\n                onChange={handleChange}\r\n                value={register.password}\r\n                name=\"password\"\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"type\" className=\"text-center\">\r\n              <select\r\n                className=\"form-control border-bottom\"\r\n                name=\"type\"\r\n                value={register.type}\r\n                onChange={handleChange}\r\n                required\r\n              >\r\n                <option value=\"\" default>\r\n                  Please select Account type...\r\n                </option>\r\n                <option value=\"USER\">User</option>\r\n                <option value=\"TECHNICIAN\">Technician</option>\r\n              </select>\r\n            </Form.Group>\r\n            <Form.Group className=\"text-center w-50 mx-auto\">\r\n              <Button\r\n                variant=\"warning\"\r\n                type=\"submit\"\r\n                className=\"btn-block w-30 rounded-pill\"\r\n              >\r\n                Sign up\r\n              </Button>\r\n              <Button\r\n                variant=\"secondary\"\r\n                className=\"btn-block w-30 rounded-pill\"\r\n                onClick={handleLogin}\r\n              >\r\n                Sign in\r\n              </Button>\r\n            </Form.Group>\r\n\r\n            <Form.Text className=\"status font-weight-bold position-absolute text-danger text-center\">\r\n              {register.hasError ? register.errorMessage : \"\"}\r\n              {register.link ? <a href=\"/login\"> Sign in instead?</a> : \"\"}\r\n            </Form.Text>\r\n            <Form.Text className=\"status font-weight-bold position-absolute text-success text-center\">\r\n              {register.success\r\n                ? \"Success! Redirecting to Sign in page...\"\r\n                : \"\"}\r\n            </Form.Text>\r\n          </Form>\r\n        </Col>\r\n        <Col md={12} lg={6} className=\"text-center order-1 order-lg-2\">\r\n          <h1>Sign up</h1>\r\n          <p>Please register first to continue.</p>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\nexport default RegisterPage;\r\n","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\repair\\index.js",["64","65"],"C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\request\\index.js",["66"],"C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\App.js",[],"C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\services\\api.js",[],"C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\components\\TopNav.js",["67"],"import React, { useContext, useEffect } from \"react\";\r\nimport { Navbar, Nav, NavDropdown } from \"react-bootstrap\";\r\nimport { UserContext } from \"../user-context\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst TopNav = () => {\r\n  const history = useHistory();\r\n  //Parse Object stored as json\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  //Get firstname only\r\n  const name = user ? user.firstName.split(/[ ,]+/).filter(Boolean)[0] : \"\";\r\n\r\n  const { isLoggedIn, setIsLoggedIn } = useContext(UserContext);\r\n  const signoutHandler = () => {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"user\");\r\n    setIsLoggedIn(false);\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  return isLoggedIn ? (\r\n    <>\r\n      <Navbar bg=\"light\" expand=\"lg\" className=\"px-5\">\r\n        <Navbar.Brand href=\"/\">Repair</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"ml-auto\">\r\n            <Nav.Link href=\"/\">Home</Nav.Link>\r\n            <Nav.Link href=\"/repairs/create\">Request</Nav.Link>\r\n            <NavDropdown title={`Hi ${name}!`} id=\"topnav-dropdown\">\r\n              <NavDropdown.Item href=\"#action/3.1\">Account</NavDropdown.Item>\r\n              <NavDropdown.Item onClick={signoutHandler}>\r\n                Sign out\r\n              </NavDropdown.Item>\r\n            </NavDropdown>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </>\r\n  ) : (\r\n    \"\"\r\n  );\r\n};\r\n\r\nexport default TopNav;\r\n","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\user-context.js",[],"C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\repairItem\\index.js",["68"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { UserContext } from \"../../user-context\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nconst RequestItemPage = ({ history, params }) => {\r\n  const { isLoggedIn } = useContext(UserContext);\r\n  useEffect(() => {\r\n    if (!isLoggedIn) history.push(\"/login\");\r\n    // eslint-disable-next-line\r\n  }, []);\r\n  return (\r\n    <>\r\n      <Row className=\"text-center align-items-center h-100\">\r\n        <Col>\r\n          <h1>RequestItems</h1>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RequestItemPage;\r\n","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\repair\\components\\RepairCard.js",["69"],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"70","replacedBy":"74"},{"ruleId":"72","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":45,"column":13,"nodeType":"78","messageId":"79","endLine":45,"endColumn":21},{"ruleId":"76","severity":1,"message":"80","line":3,"column":20,"nodeType":"78","messageId":"79","endLine":3,"endColumn":28},{"ruleId":"76","severity":1,"message":"81","line":11,"column":9,"nodeType":"78","messageId":"79","endLine":11,"endColumn":13},{"ruleId":"82","severity":1,"message":"83","line":14,"column":6,"nodeType":"84","endLine":14,"endColumn":8,"suggestions":"85"},{"ruleId":"76","severity":1,"message":"86","line":1,"column":29,"nodeType":"78","messageId":"79","endLine":1,"endColumn":38},{"ruleId":"76","severity":1,"message":"87","line":1,"column":17,"nodeType":"78","messageId":"79","endLine":1,"endColumn":25},{"ruleId":"76","severity":1,"message":"88","line":5,"column":9,"nodeType":"78","messageId":"79","endLine":5,"endColumn":20},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],["89"],["90"],"no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","'CardDeck' is defined but never used.","'user' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'isLoggedIn'. Either include them or remove the dependency array.","ArrayExpression",["91"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'statusColor' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"92","fix":"93"},"Update the dependencies array to be: [history, isLoggedIn]",{"range":"94","text":"95"},[548,550],"[history, isLoggedIn]"]