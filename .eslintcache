[{"C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\index.js":"1","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\routes.js":"2","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\login\\index.js":"3","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\register\\index.js":"4","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\repair\\index.js":"5","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\request\\index.js":"6","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\App.js":"7","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\services\\api.js":"8","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\components\\TopNav.js":"9","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\reportWebVitals.js":"10","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\repairItem\\index.js":"11","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\repair\\components\\RepairCard.js":"12","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\session-context.js":"13","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\myRequests\\index.js":"14","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\myRequests\\components\\RequestRow.js":"15","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\myRepairs\\components\\RequestRow.js":"16","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\myRepairs\\index.js":"17","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\myRequests\\components\\RequestModal.js":"18"},{"size":461,"mtime":1606838660535,"results":"19","hashOfConfig":"20"},{"size":1688,"mtime":1607406830048,"results":"21","hashOfConfig":"20"},{"size":4305,"mtime":1607512908635,"results":"22","hashOfConfig":"20"},{"size":5687,"mtime":1607315704183,"results":"23","hashOfConfig":"20"},{"size":1568,"mtime":1607439920108,"results":"24","hashOfConfig":"20"},{"size":5787,"mtime":1607279426284,"results":"25","hashOfConfig":"20"},{"size":149,"mtime":1606841822039,"results":"26","hashOfConfig":"20"},{"size":167,"mtime":1607446518674,"results":"27","hashOfConfig":"20"},{"size":1989,"mtime":1607436019856,"results":"28","hashOfConfig":"20"},{"size":362,"mtime":499162500000,"results":"29","hashOfConfig":"20"},{"size":8557,"mtime":1607324620185,"results":"30","hashOfConfig":"20"},{"size":1857,"mtime":1607517276137,"results":"31","hashOfConfig":"20"},{"size":1158,"mtime":1607312635116,"results":"32","hashOfConfig":"20"},{"size":5116,"mtime":1607526606019,"results":"33","hashOfConfig":"20"},{"size":1045,"mtime":1607514278693,"results":"34","hashOfConfig":"20"},{"size":999,"mtime":1607501373173,"results":"35","hashOfConfig":"20"},{"size":2746,"mtime":1607439516113,"results":"36","hashOfConfig":"20"},{"size":3999,"mtime":1607512829332,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1m3p4pi",{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"40"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\index.js",[],["81","82"],"C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\routes.js",["83"],"C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\login\\index.js",[],"C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\register\\index.js",["84"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { SessionContext } from \"../../session-context\";\r\nimport { Button, Form, Row, Col } from \"react-bootstrap\";\r\nimport api from \"../../services/api\";\r\n\r\nconst RegisterPage = ({ history }) => {\r\n  const { isLoggedIn } = useContext(SessionContext);\r\n\r\n  useEffect(() => {\r\n    if (isLoggedIn) history.push(\"/\");\r\n    // eslint-disable-next-line\r\n  }, []);\r\n  const [register, setRegister] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    password: \"\",\r\n    email: \"\",\r\n    type: \"\",\r\n    hasError: false,\r\n    errorMessage: \"\",\r\n    success: \"\",\r\n    link: \"\",\r\n  });\r\n  const handleChange = (event) => {\r\n    const { value, name } = event.target;\r\n    setRegister({ ...register, [name]: value });\r\n  };\r\n  const handleLogin = () => {\r\n    history.push(\"/login\");\r\n  };\r\n  const handleRegister = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const { firstName, lastName, password, email, type } = register;\r\n      if (!firstName || !lastName || !password || !email || !type) {\r\n        return setRegister({\r\n          ...register,\r\n          hasError: true,\r\n          errorMessage: \"Missing required infromation!\",\r\n          success: false,\r\n          link: \"\",\r\n        });\r\n      }\r\n\r\n      const response = await api.post(\"/user/create\", {\r\n        firstName,\r\n        lastName,\r\n        email,\r\n        password,\r\n        type,\r\n      });\r\n      setRegister({\r\n        ...register,\r\n        hasError: false,\r\n        errorMessage: \"\",\r\n        success: true,\r\n        link: \"\",\r\n      });\r\n      setTimeout(() => history.push(\"/login\"), 2000);\r\n    } catch (error) {\r\n      console.log(error.response.data.message);\r\n      setRegister({\r\n        ...register,\r\n        hasError: true,\r\n        errorMessage: \"Email already exists!\",\r\n        link: \"Sign up\",\r\n        success: false,\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Row className=\"register justify-content-around align-items-center h-100\">\r\n        <Col\r\n          md={12}\r\n          lg={6}\r\n          className=\"order-2 order-lg-1 border rounded p-5 shadow\"\r\n        >\r\n          <Form onSubmit={handleRegister} className=\"mx-auto\">\r\n            <Row>\r\n              <Col>\r\n                <Form.Group inline=\"true\" controlId=\"firstName\">\r\n                  <Form.Control\r\n                    onChange={handleChange}\r\n                    value={register.firstName}\r\n                    required\r\n                    name=\"firstName\"\r\n                    type=\"text\"\r\n                    placeholder=\"Firstname\"\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col>\r\n                <Form.Group inline=\"true\" controlId=\"lastName\">\r\n                  <Form.Control\r\n                    onChange={handleChange}\r\n                    value={register.lastName}\r\n                    required\r\n                    name=\"lastName\"\r\n                    type=\"text\"\r\n                    placeholder=\"Lastname\"\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n            <Form.Group inline=\"true\" controlId=\"email\">\r\n              <Form.Control\r\n                required\r\n                onChange={handleChange}\r\n                value={register.email}\r\n                name=\"email\"\r\n                type=\"email\"\r\n                placeholder=\"Email\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group inline=\"true\" controlId=\"password\">\r\n              <Form.Control\r\n                required\r\n                onChange={handleChange}\r\n                value={register.password}\r\n                name=\"password\"\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"type\" className=\"text-center\">\r\n              <select\r\n                className=\"form-control border-bottom\"\r\n                name=\"type\"\r\n                value={register.type}\r\n                onChange={handleChange}\r\n                required\r\n              >\r\n                <option value=\"\" default>\r\n                  Please select Account type...\r\n                </option>\r\n                <option value=\"USER\">User</option>\r\n                <option value=\"TECH\">Technician</option>\r\n              </select>\r\n            </Form.Group>\r\n            <Form.Group className=\"text-center w-50 mx-auto\">\r\n              <Button\r\n                variant=\"warning\"\r\n                type=\"submit\"\r\n                className=\"btn-block w-30 rounded-pill\"\r\n              >\r\n                Sign up\r\n              </Button>\r\n              <Button\r\n                variant=\"secondary\"\r\n                className=\"btn-block w-30 rounded-pill\"\r\n                onClick={handleLogin}\r\n              >\r\n                Sign in\r\n              </Button>\r\n            </Form.Group>\r\n\r\n            <Form.Text className=\"status font-weight-bold position-absolute text-danger text-center\">\r\n              {register.hasError ? register.errorMessage : \"\"}\r\n              {register.link ? <a href=\"/login\"> Sign in instead?</a> : \"\"}\r\n            </Form.Text>\r\n            <Form.Text className=\"status font-weight-bold position-absolute text-success text-center\">\r\n              {register.success\r\n                ? \"Success! Redirecting to Sign in page...\"\r\n                : \"\"}\r\n            </Form.Text>\r\n          </Form>\r\n        </Col>\r\n        <Col md={12} lg={6} className=\"text-center order-1 order-lg-2\">\r\n          <h1>Sign up</h1>\r\n          <p>Please register first to continue.</p>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\nexport default RegisterPage;\r\n","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\repair\\index.js",["85","86","87","88"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { SessionContext } from \"../../session-context\";\r\nimport { Row, Col, CardDeck } from \"react-bootstrap\";\r\nimport RepairCard from \"./components/RepairCard\";\r\nimport api from \"../../services/api\";\r\nimport \"./index.css\";\r\n\r\nconst RepairPage = ({ history }) => {\r\n  const { isLoggedIn } = useContext(SessionContext);\r\n  const [repairs, setRepairs] = useState(null);\r\n  const token = localStorage.getItem(\"token\");\r\n  const user = localStorage.getItem(\"user\");\r\n  const [state, setState] = useState({\r\n    hasError: false,\r\n    errorMessage: \"\",\r\n    success: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (!isLoggedIn) return history.push(\"/login\");\r\n    getRepairs();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const getRepairs = async () => {\r\n    try {\r\n      const response = await api.get(\"/requests/all\", {\r\n        headers: { \"auth-token\": token },\r\n      });\r\n      setRepairs(response.data.repairs);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const handleClick = (id) => {\r\n    history.push(\"/repairs/\" + id);\r\n  };\r\n\r\n  return repairs ? (\r\n    <Row className=\"row-cols-xl-4 row-cols-lg-3 row-cols-sm-2 row-cols-1\">\r\n      {repairs.map((repair) => (\r\n        <Col key={repair._id}>\r\n          <RepairCard data={repair} handleClick={handleClick} />\r\n        </Col>\r\n      ))}\r\n    </Row>\r\n  ) : (\r\n    <Row>\r\n      <Col>\r\n        <div className=\"text-center\">There are no requests available.</div>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default RepairPage;\r\n","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\request\\index.js",["89"],"import React, { useState, useContext, useEffect, useMemo } from \"react\";\r\nimport { SessionContext } from \"../../session-context\";\r\nimport { Row, Col, Form, Button } from \"react-bootstrap\";\r\nimport \"./index.css\";\r\nimport api from \"../../services/api\";\r\n\r\nconst RequestPage = ({ history }) => {\r\n  const { isLoggedIn } = useContext(SessionContext);\r\n  const token = localStorage.getItem(\"token\");\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  // eslint-disable-next-line\r\n  useEffect(() => {\r\n    if (!isLoggedIn) history.push(\"/login\");\r\n  }, []);\r\n  const [state, setState] = useState({\r\n    device: \"\",\r\n    issue: \"\",\r\n    image: null,\r\n    expedite: \"No\",\r\n    hasError: false,\r\n    errorMessage: \"\",\r\n    success: \"\",\r\n  });\r\n\r\n  const preview = useMemo(() => {\r\n    return state.image ? URL.createObjectURL(state.image) : null;\r\n  }, [state.image]);\r\n  const handleChange = (event) => {\r\n    const { value, name, files } = event.target;\r\n    if (files) return setState({ ...state, [name]: files[0] });\r\n    setState({ ...state, [name]: value });\r\n  };\r\n  const handleRequest = async (event) => {\r\n    event.preventDefault();\r\n    const repairData = new FormData();\r\n\r\n    try {\r\n      if (state.device && state.issue && state.image) {\r\n        repairData.append(\"device\", state.device);\r\n        repairData.append(\"customer\", user._id);\r\n        repairData.append(\"issue\", state.issue);\r\n        repairData.append(\"image\", state.image);\r\n        repairData.append(\"expedite\", state.expedite);\r\n        await api.post(\"/requests/create\", repairData, {\r\n          headers: { \"auth-token\": token },\r\n        });\r\n        setState({\r\n          device: \"\",\r\n          issue: \"\",\r\n          image: null,\r\n          expedite: \"No\",\r\n          success: true,\r\n          hasError: false,\r\n          errorMessage: \"\",\r\n        });\r\n        setTimeout(() => history.push(\"/\"), 2000);\r\n      } else {\r\n        setState({\r\n          ...state,\r\n          success: false,\r\n          hasError: true,\r\n          errorMessage: \"Missing required information!\",\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const handleCancel = () => {\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"mx-auto\">\r\n        <Col md={12} lg={6} className=\" \">\r\n          <h4>Please provide the following information:</h4>\r\n          <Form onSubmit={handleRequest} className=\"mx-auto\">\r\n            <Form.Group controlId=\"device\">\r\n              <Form.Control\r\n                onChange={handleChange}\r\n                value={state.device}\r\n                required\r\n                name=\"device\"\r\n                type=\"text\"\r\n                placeholder=\"device\"\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"issue\">\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                required\r\n                onChange={handleChange}\r\n                value={state.issue}\r\n                name=\"issue\"\r\n                placeholder=\"issue/description\"\r\n                rows={4}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"expedite\" className=\"text-center\">\r\n              <Form.Label>Expedite?: </Form.Label>\r\n              <input\r\n                id=\"Yes\"\r\n                name=\"expedite\"\r\n                type=\"radio\"\r\n                className=\"ml-3\"\r\n                checked={state.expedite === \"Yes\"}\r\n                value=\"Yes\"\r\n                onChange={handleChange}\r\n              />\r\n              <label htmlFor=\"Yes\" className=\"mr-3\">\r\n                Yes\r\n              </label>\r\n              <input\r\n                id=\"No\"\r\n                name=\"expedite\"\r\n                type=\"radio\"\r\n                className=\"ml-3\"\r\n                checked={state.expedite === \"No\"}\r\n                value=\"No\"\r\n                onChange={handleChange}\r\n              />\r\n              <label htmlFor=\"No\" className=\"mr-3\">\r\n                No\r\n              </label>\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"text-center w-25 mx-auto\">\r\n              <Button\r\n                variant=\"warning\"\r\n                type=\"submit\"\r\n                className=\"btn-block rounded-pill\"\r\n              >\r\n                Create\r\n              </Button>\r\n              <Button\r\n                variant=\"secondary\"\r\n                className=\"btn-block rounded-pill\"\r\n                onClick={handleCancel}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </Form.Group>\r\n\r\n            <Form.Text className=\"status font-weight-bold position-absolute text-danger text-center\">\r\n              {state.hasError ? state.errorMessage : \"\"}\r\n            </Form.Text>\r\n            <Form.Text className=\"status font-weight-bold position-absolute text-success text-center\">\r\n              {state.success ? \"Success! Redirecting to home...\" : \"\"}\r\n            </Form.Text>\r\n          </Form>\r\n        </Col>\r\n        <Col md={12} lg={6} className=\"text-center \">\r\n          <Form className=\"h-100\">\r\n            <Form.Group controlId=\"repairImg\" className=\"h-100\">\r\n              <Form.Label>Upload Image:</Form.Label>\r\n              <Form.File\r\n                className=\"bg-light border border-dark rounded mx-auto text-center\"\r\n                name=\"image\"\r\n                onChange={handleChange}\r\n                style={\r\n                  preview\r\n                    ? {\r\n                        backgroundImage: `url(${preview})`,\r\n                      }\r\n                    : {}\r\n                }\r\n                required\r\n                accept=\".png,.jpg,.jpeg\"\r\n              />\r\n            </Form.Group>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RequestPage;\r\n","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\App.js",[],"C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\services\\api.js",[],"C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\components\\TopNav.js",["90"],"import React, { useContext, useEffect } from \"react\";\r\nimport { Navbar, Nav, NavDropdown, Container } from \"react-bootstrap\";\r\nimport { SessionContext } from \"../session-context\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst TopNav = () => {\r\n  const history = useHistory();\r\n  //Parse Object stored as json\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  //Get firstname only\r\n  const name = user ? user.firstName.split(/[ ,]+/).filter(Boolean)[0] : \"\";\r\n\r\n  const { isLoggedIn, setIsLoggedIn } = useContext(SessionContext);\r\n  const signoutHandler = () => {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"user\");\r\n    setIsLoggedIn(false);\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  return isLoggedIn ? (\r\n    <>\r\n      <Navbar bg=\"warning\" variant=\"dark\" expand=\"lg\" className=\"text-white\">\r\n        <Container>\r\n          <Navbar.Brand href=\"/\">Repair</Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"ml-auto\">\r\n              <Nav.Link className=\"text-white\" href=\"/\">\r\n                Home\r\n              </Nav.Link>\r\n              <Nav.Link className=\"text-white\" href=\"/user/requests\">\r\n                Requests\r\n              </Nav.Link>\r\n              {user.type !== \"USER\" ? (\r\n                <Nav.Link className=\"text-white\" href=\"/user/repairs\">\r\n                  Repairs\r\n                </Nav.Link>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n\r\n              <NavDropdown title={`Hi ${name}!`} id=\"topnav-dropdown\">\r\n                <NavDropdown.Item href=\"#action/3.1\">Account</NavDropdown.Item>\r\n                <NavDropdown.Item onClick={signoutHandler}>\r\n                  Sign out\r\n                </NavDropdown.Item>\r\n              </NavDropdown>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </>\r\n  ) : (\r\n    \"\"\r\n  );\r\n};\r\n\r\nexport default TopNav;\r\n","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\repairItem\\index.js",["91","92","93","94"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { SessionContext } from \"../../session-context\";\r\nimport { Container, Row, Col, Badge, Button, Form } from \"react-bootstrap\";\r\nimport api from \"../../services/api\";\r\nimport moment from \"moment\";\r\nimport \"./index.css\";\r\nconst RequestItemPage = ({ history }) => {\r\n  const token = localStorage.getItem(\"token\");\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  const { isLoggedIn, statusColor } = useContext(SessionContext);\r\n  const [repair, setRepair] = useState(null);\r\n  const { id } = useParams();\r\n  const [state, setState] = useState({\r\n    status: \"\",\r\n    note: \"\",\r\n    repairId: \"\",\r\n    success: false,\r\n    hasError: false,\r\n    errorMessage: \"\",\r\n  });\r\n  const handleChange = (event) => {\r\n    const { value, name } = event.target;\r\n    setState({ ...state, [name]: value });\r\n  };\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const { status, note } = state;\r\n    if (!status || !note) return alert(\"Missing information!\");\r\n    try {\r\n      const response = await api.put(\r\n        \"/requests/\" + repair._id,\r\n        { status, note },\r\n        { headers: { \"auth-token\": token } }\r\n      );\r\n      setState({\r\n        status: \"\",\r\n        note: \"\",\r\n        repairId: \"\",\r\n        success: true,\r\n        hasError: false,\r\n        errorMessage: \"\",\r\n      });\r\n      setTimeout(() => window.location.reload(), 2000);\r\n    } catch (error) {\r\n      setState({\r\n        ...state,\r\n        hasError: true,\r\n        errorMessage: \"Missing Information!\",\r\n        success: false,\r\n      });\r\n    }\r\n  };\r\n  const getRepair = async () => {\r\n    try {\r\n      const response = await api.get(\"/requests/\" + id, {\r\n        headers: { \"auth-token\": token },\r\n      });\r\n      console.log(user);\r\n      setRepair(response.data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  let mounted;\r\n  useEffect(() => {\r\n    if (!isLoggedIn) return history.push(\"/login\");\r\n    getRepair();\r\n  }, []);\r\n\r\n  const newDate = (date) => {\r\n    const original = moment(date);\r\n    return original.format(\"MMM Do YYYY, h:mm:ss a\");\r\n  };\r\n  return !repair ? null : (\r\n    <>\r\n      <Row className=\"text-center justify-content-between align-items-start mh-100\">\r\n        <Col md={12} lg={6}>\r\n          <div className=\"product-img d-table-cell d-sm-block\">\r\n            <img className=\"mh-100 mw-100\" src={repair.image_url} />\r\n          </div>\r\n        </Col>\r\n        <Col md={12} lg={6}>\r\n          <Container className=\"details-body text-left\">\r\n            <h4>{repair.device}</h4>\r\n            <div className=\"text-left\">\r\n              <Badge variant={statusColor(repair.status)}>\r\n                {repair.status}\r\n              </Badge>\r\n              <Badge\r\n                className=\"ml-1\"\r\n                variant={repair.expedite ? \"danger\" : \"primary\"}\r\n              >\r\n                {repair.expedite ? \"EXPEDITE\" : \"REGULAR\"}\r\n              </Badge>\r\n            </div>\r\n            <Row>\r\n              <Col>\r\n                <ul>\r\n                  <li>Created</li>\r\n                  <li>{newDate(repair.dateCreated)}</li>\r\n                  <li>Requestor</li>\r\n                  <li className=\"li-container position-relative\">\r\n                    {repair.customer.firstName} {repair.customer.lastName}\r\n                    <a\r\n                      className=\"email\"\r\n                      href={`mailto:${repair.customer.email}`}\r\n                    >\r\n                      {repair.customer.email}\r\n                    </a>\r\n                  </li>\r\n                </ul>\r\n              </Col>\r\n              <Col>\r\n                <ul>\r\n                  <li>Updated</li>\r\n                  <li>{newDate(repair.lastUpdate)}</li>\r\n                  <li>Last User</li>\r\n                  <li className=\"li-container position-relative\">\r\n                    {repair.user.firstName} {repair.user.lastName}\r\n                    <a className=\"email\" href={`mailto:${repair.user.email}`}>\r\n                      {repair.user.email}\r\n                    </a>\r\n                  </li>\r\n                </ul>\r\n              </Col>\r\n            </Row>\r\n            <ul>\r\n              <li>Issue/Description</li>\r\n              <li className=\"issue overflow-auto\">{repair.issue}</li>\r\n            </ul>\r\n            <Row className=\"justify-content-center\">\r\n              <Col>\r\n                <Form onSubmit={handleSubmit}>\r\n                  <Form.Group controlId=\"status\">\r\n                    <Form.Control\r\n                      name=\"status\"\r\n                      value={state.status}\r\n                      className={`d-inline-block w-auto ${\r\n                        state.status === \"DELETE\" ? \"border border-danger\" : \"\"\r\n                      }`}\r\n                      as=\"select\"\r\n                      onChange={handleChange}\r\n                      required\r\n                      disabled={\r\n                        user._id !== repair.customer._id && user.type === \"USER\"\r\n                      }\r\n                    >\r\n                      <option value=\"\" default>\r\n                        Update Status:\r\n                      </option>\r\n                      {user.type !== \"USER\" ? (\r\n                        <>\r\n                          <option value=\"RECEIVED\" default>\r\n                            RECEIVED\r\n                          </option>\r\n                          <option value=\"ONGOING\" default>\r\n                            ONGOING\r\n                          </option>\r\n                          <option value=\"ON HOLD\" default>\r\n                            ON HOLD\r\n                          </option>\r\n                          <option value=\"OUTGOING\" default>\r\n                            OUTGOING\r\n                          </option>\r\n                          <option value=\"COMPLETED\" default>\r\n                            COMPLETED\r\n                          </option>\r\n                        </>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                      {user.type === \"ADMIN\" ||\r\n                      user._id === repair.customer._id ? (\r\n                        <>\r\n                          <option value=\"CANCELLED\" default>\r\n                            CANCEL\r\n                          </option>\r\n                          <option\r\n                            className=\"bg-danger text-white\"\r\n                            value=\"DELETE\"\r\n                            default\r\n                          >\r\n                            DELETE\r\n                          </option>\r\n                        </>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group className=\"\" controlId=\"note\">\r\n                    <Form.Control\r\n                      placeholder=\"Note:\"\r\n                      as=\"textarea\"\r\n                      name=\"note\"\r\n                      value={state.note}\r\n                      rows={3}\r\n                      onChange={handleChange}\r\n                      disabled={!state.status}\r\n                      required\r\n                    />\r\n                    <div className=\"d-flex justify-content-end mt-2\">\r\n                      <Button\r\n                        type=\"submit\"\r\n                        className=\"mx-1 w-25\"\r\n                        disabled={!state.status || !state.note}\r\n                      >\r\n                        Submit\r\n                      </Button>\r\n                      <Button\r\n                        variant=\"danger\"\r\n                        className=\"mx-2 w-25\"\r\n                        disabled={!state.status || !state.note}\r\n                      >\r\n                        Cancel\r\n                      </Button>\r\n                    </div>\r\n                  </Form.Group>\r\n                  <Form.Text className=\"status font-weight-bold position-absolute text-danger text-center\">\r\n                    {state.hasError ? state.errorMessage : \"\"}\r\n                  </Form.Text>\r\n                  <Form.Text className=\"status font-weight-bold position-absolute text-success text-center\">\r\n                    {state.success ? \"Request updated! Loading...\" : \"\"}\r\n                  </Form.Text>\r\n                </Form>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RequestItemPage;\r\n","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\repair\\components\\RepairCard.js",["95","96"],"C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\session-context.js",[],"C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\myRequests\\index.js",["97"],"C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\myRequests\\components\\RequestRow.js",["98","99","100"],"C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\myRepairs\\components\\RequestRow.js",["101","102"],"C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\myRepairs\\index.js",["103","104","105"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Row, Col, Button, Table } from \"react-bootstrap\";\r\nimport { MdAddToQueue } from \"react-icons/md\";\r\nimport api from \"../../services/api\";\r\nimport { SessionContext } from \"../../session-context\";\r\nimport RequestRow from \"./components/RequestRow\";\r\nimport \"./index.css\";\r\n\r\nconst MyRepairsPage = ({ history }) => {\r\n  const { isLoggedIn } = useContext(SessionContext);\r\n  const [requests, setRequests] = useState(null);\r\n  const token = localStorage.getItem(\"token\");\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  useEffect(() => {\r\n    if (!isLoggedIn || user.type === \"USER\") return history.push(\"/login\");\r\n    if (user.type === \"USER\") return history.push(\"/\");\r\n    getRepairs();\r\n  }, []);\r\n\r\n  const handleClick = (id) => {\r\n    history.push(\"/repairs/\" + id);\r\n  };\r\n  const handleSort = (event) => {\r\n    const property = event.target.textContent.toLowerCase();\r\n    const compare = (a, b) => {\r\n      if (property === \"type\") {\r\n        return b.expedite - a.expedite;\r\n      }\r\n      if (property === \"update\") {\r\n        return new Date(b.lastUpdate) - new Date(a.lastUpdate);\r\n      }\r\n      if (a[property].toLowerCase() < b[property].toLowerCase()) return -1;\r\n      if (a[property].toLowerCase() > b[property].toLowerCase()) return 1;\r\n      return 0;\r\n    };\r\n    const sorted = requests.sort(compare);\r\n    setRequests([...sorted]);\r\n  };\r\n  const getRepairs = async () => {\r\n    try {\r\n      const response = await api.get(\"/tech/requests/\", {\r\n        headers: { \"auth-token\": token },\r\n      });\r\n\r\n      setRequests(response.data.repairs);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  return (\r\n    <Row className=\"justify-content-between align-items-center\">\r\n      <Col>\r\n        <Table\r\n          striped\r\n          responsive\r\n          bordered\r\n          hover\r\n          className=\"text-center table-sm\"\r\n        >\r\n          <thead>\r\n            <tr onClick={handleSort}>\r\n              <th>Device</th>\r\n              <th>Issue</th>\r\n              <th>Type</th>\r\n              <th>Status</th>\r\n              <th>Update</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {requests ? (\r\n              requests.map((request) => (\r\n                <RequestRow\r\n                  handleClick={handleClick}\r\n                  key={request._id}\r\n                  data={request}\r\n                  user={user}\r\n                />\r\n              ))\r\n            ) : (\r\n              <tr>\r\n                <td colSpan=\"5\">You have no repairs.</td>\r\n              </tr>\r\n            )}\r\n          </tbody>\r\n        </Table>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default MyRepairsPage;\r\n","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\myRequests\\components\\RequestModal.js",[],{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":6,"column":8,"nodeType":"112","messageId":"113","endLine":6,"endColumn":19},{"ruleId":"110","severity":1,"message":"114","line":45,"column":13,"nodeType":"112","messageId":"113","endLine":45,"endColumn":21},{"ruleId":"110","severity":1,"message":"115","line":3,"column":20,"nodeType":"112","messageId":"113","endLine":3,"endColumn":28},{"ruleId":"110","severity":1,"message":"116","line":12,"column":9,"nodeType":"112","messageId":"113","endLine":12,"endColumn":13},{"ruleId":"110","severity":1,"message":"117","line":13,"column":10,"nodeType":"112","messageId":"113","endLine":13,"endColumn":15},{"ruleId":"110","severity":1,"message":"118","line":13,"column":17,"nodeType":"112","messageId":"113","endLine":13,"endColumn":25},{"ruleId":"119","severity":1,"message":"120","line":14,"column":6,"nodeType":"121","endLine":14,"endColumn":8,"suggestions":"122"},{"ruleId":"110","severity":1,"message":"123","line":1,"column":29,"nodeType":"112","messageId":"113","endLine":1,"endColumn":38},{"ruleId":"110","severity":1,"message":"114","line":31,"column":13,"nodeType":"112","messageId":"113","endLine":31,"endColumn":21},{"ruleId":"110","severity":1,"message":"124","line":65,"column":7,"nodeType":"112","messageId":"113","endLine":65,"endColumn":14},{"ruleId":"119","severity":1,"message":"125","line":69,"column":6,"nodeType":"121","endLine":69,"endColumn":8,"suggestions":"126"},{"ruleId":"127","severity":1,"message":"128","line":80,"column":13,"nodeType":"129","endLine":80,"endColumn":69},{"ruleId":"110","severity":1,"message":"130","line":1,"column":17,"nodeType":"112","messageId":"113","endLine":1,"endColumn":25},{"ruleId":"110","severity":1,"message":"131","line":8,"column":9,"nodeType":"112","messageId":"113","endLine":8,"endColumn":16},{"ruleId":"119","severity":1,"message":"132","line":27,"column":6,"nodeType":"121","endLine":27,"endColumn":8,"suggestions":"133"},{"ruleId":"110","severity":1,"message":"130","line":1,"column":29,"nodeType":"112","messageId":"113","endLine":1,"endColumn":37},{"ruleId":"110","severity":1,"message":"134","line":2,"column":10,"nodeType":"112","messageId":"113","endLine":2,"endColumn":16},{"ruleId":"135","severity":1,"message":"136","line":15,"column":9,"nodeType":"129","endLine":15,"endColumn":71},{"ruleId":"110","severity":1,"message":"134","line":2,"column":10,"nodeType":"112","messageId":"113","endLine":2,"endColumn":16},{"ruleId":"127","severity":1,"message":"128","line":15,"column":9,"nodeType":"129","endLine":15,"endColumn":37},{"ruleId":"110","severity":1,"message":"134","line":2,"column":20,"nodeType":"112","messageId":"113","endLine":2,"endColumn":26},{"ruleId":"110","severity":1,"message":"137","line":3,"column":10,"nodeType":"112","messageId":"113","endLine":3,"endColumn":22},{"ruleId":"119","severity":1,"message":"138","line":18,"column":6,"nodeType":"121","endLine":18,"endColumn":8,"suggestions":"139"},"no-native-reassign",["140"],"no-negated-in-lhs",["141"],"no-unused-vars","'RequestPage' is defined but never used.","Identifier","unusedVar","'response' is assigned a value but never used.","'CardDeck' is defined but never used.","'user' is assigned a value but never used.","'state' is assigned a value but never used.","'setState' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'isLoggedIn'. Either include them or remove the dependency array.","ArrayExpression",["142"],"'useEffect' is defined but never used.","'mounted' is defined but never used.","React Hook useEffect has missing dependencies: 'getRepair', 'history', and 'isLoggedIn'. Either include them or remove the dependency array.",["143"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","'history' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getRepairs', 'history', and 'isLoggedIn'. Either include them or remove the dependency array.",["144"],"'Button' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'MdAddToQueue' is defined but never used.","React Hook useEffect has missing dependencies: 'getRepairs', 'history', 'isLoggedIn', and 'user.type'. Either include them or remove the dependency array.",["145"],"no-global-assign","no-unsafe-negation",{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},"Update the dependencies array to be: [history, isLoggedIn]",{"range":"154","text":"155"},"Update the dependencies array to be: [getRepair, history, isLoggedIn]",{"range":"156","text":"157"},"Update the dependencies array to be: [getRepairs, history, isLoggedIn]",{"range":"158","text":"159"},"Update the dependencies array to be: [getRepairs, history, isLoggedIn, user.type]",{"range":"160","text":"161"},[557,559],"[history, isLoggedIn]",[2071,2073],"[getRepair, history, isLoggedIn]",[969,971],"[getRepairs, history, isLoggedIn]",[777,779],"[getRepairs, history, isLoggedIn, user.type]"]