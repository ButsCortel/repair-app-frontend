[{"C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\index.js":"1","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\routes.js":"2","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\login\\index.js":"3","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\register\\index.js":"4","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\repair\\index.js":"5","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\request\\index.js":"6","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\App.js":"7","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\services\\api.js":"8","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\components\\TopNav.js":"9","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\reportWebVitals.js":"10","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\repairItem\\index.js":"11","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\repair\\components\\RepairCard.js":"12","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\session-context.js":"13","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\myRequests\\index.js":"14","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\myRequests\\components\\RequestRow.js":"15","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\myRepairs\\components\\RequestRow.js":"16","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\myRepairs\\index.js":"17","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\myRequests\\components\\RequestModal.js":"18","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\repairItem\\Components\\HistoryRow.js":"19"},{"size":461,"mtime":1606838660535,"results":"20","hashOfConfig":"21"},{"size":1688,"mtime":1607406830048,"results":"22","hashOfConfig":"21"},{"size":4305,"mtime":1607619000584,"results":"23","hashOfConfig":"21"},{"size":5687,"mtime":1607315704183,"results":"24","hashOfConfig":"21"},{"size":1705,"mtime":1607619119655,"results":"25","hashOfConfig":"21"},{"size":5787,"mtime":1607279426284,"results":"26","hashOfConfig":"21"},{"size":149,"mtime":1606841822039,"results":"27","hashOfConfig":"21"},{"size":167,"mtime":1607446518674,"results":"28","hashOfConfig":"21"},{"size":1977,"mtime":1607765583271,"results":"29","hashOfConfig":"21"},{"size":362,"mtime":499162500000,"results":"30","hashOfConfig":"21"},{"size":11120,"mtime":1607779392399,"results":"31","hashOfConfig":"21"},{"size":1857,"mtime":1607517276137,"results":"32","hashOfConfig":"21"},{"size":1158,"mtime":1607312635116,"results":"33","hashOfConfig":"21"},{"size":6319,"mtime":1607772694399,"results":"34","hashOfConfig":"21"},{"size":1104,"mtime":1607754637199,"results":"35","hashOfConfig":"21"},{"size":1384,"mtime":1607787673567,"results":"36","hashOfConfig":"21"},{"size":3035,"mtime":1607787461040,"results":"37","hashOfConfig":"21"},{"size":4846,"mtime":1607654919757,"results":"38","hashOfConfig":"21"},{"size":745,"mtime":1607776949005,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1m3p4pi",{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"47"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"47"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\index.js",[],["84","85"],"C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\routes.js",["86"],"C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\login\\index.js",[],["87","88"],"C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\register\\index.js",["89"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { SessionContext } from \"../../session-context\";\r\nimport { Button, Form, Row, Col } from \"react-bootstrap\";\r\nimport api from \"../../services/api\";\r\n\r\nconst RegisterPage = ({ history }) => {\r\n  const { isLoggedIn } = useContext(SessionContext);\r\n\r\n  useEffect(() => {\r\n    if (isLoggedIn) history.push(\"/\");\r\n    // eslint-disable-next-line\r\n  }, []);\r\n  const [register, setRegister] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    password: \"\",\r\n    email: \"\",\r\n    type: \"\",\r\n    hasError: false,\r\n    errorMessage: \"\",\r\n    success: \"\",\r\n    link: \"\",\r\n  });\r\n  const handleChange = (event) => {\r\n    const { value, name } = event.target;\r\n    setRegister({ ...register, [name]: value });\r\n  };\r\n  const handleLogin = () => {\r\n    history.push(\"/login\");\r\n  };\r\n  const handleRegister = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const { firstName, lastName, password, email, type } = register;\r\n      if (!firstName || !lastName || !password || !email || !type) {\r\n        return setRegister({\r\n          ...register,\r\n          hasError: true,\r\n          errorMessage: \"Missing required infromation!\",\r\n          success: false,\r\n          link: \"\",\r\n        });\r\n      }\r\n\r\n      const response = await api.post(\"/user/create\", {\r\n        firstName,\r\n        lastName,\r\n        email,\r\n        password,\r\n        type,\r\n      });\r\n      setRegister({\r\n        ...register,\r\n        hasError: false,\r\n        errorMessage: \"\",\r\n        success: true,\r\n        link: \"\",\r\n      });\r\n      setTimeout(() => history.push(\"/login\"), 2000);\r\n    } catch (error) {\r\n      console.log(error.response.data.message);\r\n      setRegister({\r\n        ...register,\r\n        hasError: true,\r\n        errorMessage: \"Email already exists!\",\r\n        link: \"Sign up\",\r\n        success: false,\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Row className=\"register justify-content-around align-items-center h-100\">\r\n        <Col\r\n          md={12}\r\n          lg={6}\r\n          className=\"order-2 order-lg-1 border rounded p-5 shadow\"\r\n        >\r\n          <Form onSubmit={handleRegister} className=\"mx-auto\">\r\n            <Row>\r\n              <Col>\r\n                <Form.Group inline=\"true\" controlId=\"firstName\">\r\n                  <Form.Control\r\n                    onChange={handleChange}\r\n                    value={register.firstName}\r\n                    required\r\n                    name=\"firstName\"\r\n                    type=\"text\"\r\n                    placeholder=\"Firstname\"\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col>\r\n                <Form.Group inline=\"true\" controlId=\"lastName\">\r\n                  <Form.Control\r\n                    onChange={handleChange}\r\n                    value={register.lastName}\r\n                    required\r\n                    name=\"lastName\"\r\n                    type=\"text\"\r\n                    placeholder=\"Lastname\"\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n            <Form.Group inline=\"true\" controlId=\"email\">\r\n              <Form.Control\r\n                required\r\n                onChange={handleChange}\r\n                value={register.email}\r\n                name=\"email\"\r\n                type=\"email\"\r\n                placeholder=\"Email\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group inline=\"true\" controlId=\"password\">\r\n              <Form.Control\r\n                required\r\n                onChange={handleChange}\r\n                value={register.password}\r\n                name=\"password\"\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"type\" className=\"text-center\">\r\n              <select\r\n                className=\"form-control border-bottom\"\r\n                name=\"type\"\r\n                value={register.type}\r\n                onChange={handleChange}\r\n                required\r\n              >\r\n                <option value=\"\" default>\r\n                  Please select Account type...\r\n                </option>\r\n                <option value=\"USER\">User</option>\r\n                <option value=\"TECH\">Technician</option>\r\n              </select>\r\n            </Form.Group>\r\n            <Form.Group className=\"text-center w-50 mx-auto\">\r\n              <Button\r\n                variant=\"warning\"\r\n                type=\"submit\"\r\n                className=\"btn-block w-30 rounded-pill\"\r\n              >\r\n                Sign up\r\n              </Button>\r\n              <Button\r\n                variant=\"secondary\"\r\n                className=\"btn-block w-30 rounded-pill\"\r\n                onClick={handleLogin}\r\n              >\r\n                Sign in\r\n              </Button>\r\n            </Form.Group>\r\n\r\n            <Form.Text className=\"status font-weight-bold position-absolute text-danger text-center\">\r\n              {register.hasError ? register.errorMessage : \"\"}\r\n              {register.link ? <a href=\"/login\"> Sign in instead?</a> : \"\"}\r\n            </Form.Text>\r\n            <Form.Text className=\"status font-weight-bold position-absolute text-success text-center\">\r\n              {register.success\r\n                ? \"Success! Redirecting to Sign in page...\"\r\n                : \"\"}\r\n            </Form.Text>\r\n          </Form>\r\n        </Col>\r\n        <Col md={12} lg={6} className=\"text-center order-1 order-lg-2\">\r\n          <h1>Sign up</h1>\r\n          <p>Please register first to continue.</p>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\nexport default RegisterPage;\r\n","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\repair\\index.js",[],"C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\request\\index.js",["90"],"import React, { useState, useContext, useEffect, useMemo } from \"react\";\r\nimport { SessionContext } from \"../../session-context\";\r\nimport { Row, Col, Form, Button } from \"react-bootstrap\";\r\nimport \"./index.css\";\r\nimport api from \"../../services/api\";\r\n\r\nconst RequestPage = ({ history }) => {\r\n  const { isLoggedIn } = useContext(SessionContext);\r\n  const token = localStorage.getItem(\"token\");\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  // eslint-disable-next-line\r\n  useEffect(() => {\r\n    if (!isLoggedIn) history.push(\"/login\");\r\n  }, []);\r\n  const [state, setState] = useState({\r\n    device: \"\",\r\n    issue: \"\",\r\n    image: null,\r\n    expedite: \"No\",\r\n    hasError: false,\r\n    errorMessage: \"\",\r\n    success: \"\",\r\n  });\r\n\r\n  const preview = useMemo(() => {\r\n    return state.image ? URL.createObjectURL(state.image) : null;\r\n  }, [state.image]);\r\n  const handleChange = (event) => {\r\n    const { value, name, files } = event.target;\r\n    if (files) return setState({ ...state, [name]: files[0] });\r\n    setState({ ...state, [name]: value });\r\n  };\r\n  const handleRequest = async (event) => {\r\n    event.preventDefault();\r\n    const repairData = new FormData();\r\n\r\n    try {\r\n      if (state.device && state.issue && state.image) {\r\n        repairData.append(\"device\", state.device);\r\n        repairData.append(\"customer\", user._id);\r\n        repairData.append(\"issue\", state.issue);\r\n        repairData.append(\"image\", state.image);\r\n        repairData.append(\"expedite\", state.expedite);\r\n        await api.post(\"/requests/create\", repairData, {\r\n          headers: { \"auth-token\": token },\r\n        });\r\n        setState({\r\n          device: \"\",\r\n          issue: \"\",\r\n          image: null,\r\n          expedite: \"No\",\r\n          success: true,\r\n          hasError: false,\r\n          errorMessage: \"\",\r\n        });\r\n        setTimeout(() => history.push(\"/\"), 2000);\r\n      } else {\r\n        setState({\r\n          ...state,\r\n          success: false,\r\n          hasError: true,\r\n          errorMessage: \"Missing required information!\",\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const handleCancel = () => {\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"mx-auto\">\r\n        <Col md={12} lg={6} className=\" \">\r\n          <h4>Please provide the following information:</h4>\r\n          <Form onSubmit={handleRequest} className=\"mx-auto\">\r\n            <Form.Group controlId=\"device\">\r\n              <Form.Control\r\n                onChange={handleChange}\r\n                value={state.device}\r\n                required\r\n                name=\"device\"\r\n                type=\"text\"\r\n                placeholder=\"device\"\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"issue\">\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                required\r\n                onChange={handleChange}\r\n                value={state.issue}\r\n                name=\"issue\"\r\n                placeholder=\"issue/description\"\r\n                rows={4}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"expedite\" className=\"text-center\">\r\n              <Form.Label>Expedite?: </Form.Label>\r\n              <input\r\n                id=\"Yes\"\r\n                name=\"expedite\"\r\n                type=\"radio\"\r\n                className=\"ml-3\"\r\n                checked={state.expedite === \"Yes\"}\r\n                value=\"Yes\"\r\n                onChange={handleChange}\r\n              />\r\n              <label htmlFor=\"Yes\" className=\"mr-3\">\r\n                Yes\r\n              </label>\r\n              <input\r\n                id=\"No\"\r\n                name=\"expedite\"\r\n                type=\"radio\"\r\n                className=\"ml-3\"\r\n                checked={state.expedite === \"No\"}\r\n                value=\"No\"\r\n                onChange={handleChange}\r\n              />\r\n              <label htmlFor=\"No\" className=\"mr-3\">\r\n                No\r\n              </label>\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"text-center w-25 mx-auto\">\r\n              <Button\r\n                variant=\"warning\"\r\n                type=\"submit\"\r\n                className=\"btn-block rounded-pill\"\r\n              >\r\n                Create\r\n              </Button>\r\n              <Button\r\n                variant=\"secondary\"\r\n                className=\"btn-block rounded-pill\"\r\n                onClick={handleCancel}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </Form.Group>\r\n\r\n            <Form.Text className=\"status font-weight-bold position-absolute text-danger text-center\">\r\n              {state.hasError ? state.errorMessage : \"\"}\r\n            </Form.Text>\r\n            <Form.Text className=\"status font-weight-bold position-absolute text-success text-center\">\r\n              {state.success ? \"Success! Redirecting to home...\" : \"\"}\r\n            </Form.Text>\r\n          </Form>\r\n        </Col>\r\n        <Col md={12} lg={6} className=\"text-center \">\r\n          <Form className=\"h-100\">\r\n            <Form.Group controlId=\"repairImg\" className=\"h-100\">\r\n              <Form.Label>Upload Image:</Form.Label>\r\n              <Form.File\r\n                className=\"bg-light border border-dark rounded mx-auto text-center\"\r\n                name=\"image\"\r\n                onChange={handleChange}\r\n                style={\r\n                  preview\r\n                    ? {\r\n                        backgroundImage: `url(${preview})`,\r\n                      }\r\n                    : {}\r\n                }\r\n                required\r\n                accept=\".png,.jpg,.jpeg\"\r\n              />\r\n            </Form.Group>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RequestPage;\r\n","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\App.js",[],"C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\services\\api.js",[],["91","92"],"C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\components\\TopNav.js",["93"],"import React, { useContext, useEffect } from \"react\";\r\nimport { Navbar, Nav, NavDropdown, Container } from \"react-bootstrap\";\r\nimport { SessionContext } from \"../session-context\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst TopNav = () => {\r\n  const history = useHistory();\r\n  //Parse Object stored as json\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  //Get firstname only\r\n  const name = user ? user.firstName.split(/[ ,]+/).filter(Boolean)[0] : \"\";\r\n\r\n  const { isLoggedIn, setIsLoggedIn } = useContext(SessionContext);\r\n  const signoutHandler = () => {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"user\");\r\n    setIsLoggedIn(false);\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  return isLoggedIn ? (\r\n    <>\r\n      <Navbar variant=\"dark\" expand=\"lg\" className=\"text-white\">\r\n        <Container>\r\n          <Navbar.Brand href=\"/\">Repair</Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"ml-auto\">\r\n              <Nav.Link className=\"text-white\" href=\"/\">\r\n                Queue\r\n              </Nav.Link>\r\n              <Nav.Link className=\"text-white\" href=\"/user/requests\">\r\n                Requests\r\n              </Nav.Link>\r\n              {user.type !== \"USER\" ? (\r\n                <Nav.Link className=\"text-white\" href=\"/user/repairs\">\r\n                  Repairs\r\n                </Nav.Link>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n\r\n              <NavDropdown title={`Hi ${name}!`} id=\"topnav-dropdown\">\r\n                <NavDropdown.Item href=\"#action/3.1\">Account</NavDropdown.Item>\r\n                <NavDropdown.Item onClick={signoutHandler}>\r\n                  Sign out\r\n                </NavDropdown.Item>\r\n              </NavDropdown>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </>\r\n  ) : (\r\n    \"\"\r\n  );\r\n};\r\n\r\nexport default TopNav;\r\n","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\repairItem\\index.js",["94","95"],"C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\repair\\components\\RepairCard.js",["96","97"],"C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\session-context.js",[],"C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\myRequests\\index.js",["98"],"C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\myRequests\\components\\RequestRow.js",["99","100","101"],"C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\myRepairs\\components\\RequestRow.js",["102","103","104","105"],"C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\myRepairs\\index.js",["106"],"C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\myRequests\\components\\RequestModal.js",[],"C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\repairItem\\Components\\HistoryRow.js",[],{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":6,"column":8,"nodeType":"113","messageId":"114","endLine":6,"endColumn":19},{"ruleId":"107","replacedBy":"115"},{"ruleId":"109","replacedBy":"116"},{"ruleId":"111","severity":1,"message":"117","line":45,"column":13,"nodeType":"113","messageId":"114","endLine":45,"endColumn":21},{"ruleId":"118","severity":1,"message":"119","line":14,"column":6,"nodeType":"120","endLine":14,"endColumn":8,"suggestions":"121"},{"ruleId":"107","replacedBy":"122"},{"ruleId":"109","replacedBy":"123"},{"ruleId":"111","severity":1,"message":"124","line":1,"column":29,"nodeType":"113","messageId":"114","endLine":1,"endColumn":38},{"ruleId":"118","severity":1,"message":"125","line":98,"column":6,"nodeType":"120","endLine":98,"endColumn":8,"suggestions":"126"},{"ruleId":"127","severity":1,"message":"128","line":181,"column":15,"nodeType":"129","endLine":181,"endColumn":71},{"ruleId":"111","severity":1,"message":"130","line":1,"column":17,"nodeType":"113","messageId":"114","endLine":1,"endColumn":25},{"ruleId":"111","severity":1,"message":"131","line":8,"column":9,"nodeType":"113","messageId":"114","endLine":8,"endColumn":16},{"ruleId":"118","severity":1,"message":"132","line":31,"column":6,"nodeType":"120","endLine":31,"endColumn":8,"suggestions":"133"},{"ruleId":"111","severity":1,"message":"130","line":1,"column":29,"nodeType":"113","messageId":"114","endLine":1,"endColumn":37},{"ruleId":"111","severity":1,"message":"134","line":2,"column":10,"nodeType":"113","messageId":"114","endLine":2,"endColumn":16},{"ruleId":"135","severity":1,"message":"136","line":15,"column":9,"nodeType":"129","endLine":15,"endColumn":71},{"ruleId":"111","severity":1,"message":"124","line":1,"column":29,"nodeType":"113","messageId":"114","endLine":1,"endColumn":38},{"ruleId":"111","severity":1,"message":"137","line":9,"column":10,"nodeType":"113","messageId":"114","endLine":9,"endColumn":13},{"ruleId":"111","severity":1,"message":"138","line":9,"column":15,"nodeType":"113","messageId":"114","endLine":9,"endColumn":21},{"ruleId":"127","severity":1,"message":"128","line":29,"column":9,"nodeType":"129","endLine":35,"endColumn":11},{"ruleId":"118","severity":1,"message":"139","line":18,"column":6,"nodeType":"120","endLine":18,"endColumn":8,"suggestions":"140"},"no-native-reassign",["141"],"no-negated-in-lhs",["142"],"no-unused-vars","'RequestPage' is defined but never used.","Identifier","unusedVar",["141"],["142"],"'response' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'isLoggedIn'. Either include them or remove the dependency array.","ArrayExpression",["143"],["141"],["142"],"'useEffect' is defined but never used.","React Hook useEffect has missing dependencies: 'getRepair', 'history', and 'isLoggedIn'. Either include them or remove the dependency array.",["144"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","'history' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getRepairs', 'history', and 'isLoggedIn'. Either include them or remove the dependency array.",["145"],"'Button' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'src' is assigned a value but never used.","'setSrc' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getRepairs', 'history', 'isLoggedIn', and 'user.type'. Either include them or remove the dependency array.",["146"],"no-global-assign","no-unsafe-negation",{"desc":"147","fix":"148"},{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},"Update the dependencies array to be: [history, isLoggedIn]",{"range":"155","text":"156"},"Update the dependencies array to be: [getRepair, history, isLoggedIn]",{"range":"157","text":"158"},"Update the dependencies array to be: [getRepairs, history, isLoggedIn]",{"range":"159","text":"160"},"Update the dependencies array to be: [getRepairs, history, isLoggedIn, user.type]",{"range":"161","text":"162"},[557,559],"[history, isLoggedIn]",[2751,2753],"[getRepair, history, isLoggedIn]",[1060,1062],"[getRepairs, history, isLoggedIn]",[773,775],"[getRepairs, history, isLoggedIn, user.type]"]