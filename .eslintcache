[{"C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\index.js":"1","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\routes.js":"2","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\login\\index.js":"3","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\register\\index.js":"4","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\repair\\index.js":"5","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\App.js":"6","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\services\\api.js":"7","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\components\\TopNav.js":"8","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\reportWebVitals.js":"9","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\repairItem\\index.js":"10","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\repair\\components\\RepairCard.js":"11","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\session-context.js":"12","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\myRequests\\index.js":"13","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\myRequests\\components\\RequestRow.js":"14","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\myRepairs\\components\\RequestRow.js":"15","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\myRepairs\\index.js":"16","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\myRequests\\components\\RequestModal.js":"17","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\repairItem\\Components\\HistoryRow.js":"18","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\myRepairs\\components\\Alert.js":"19","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\repairItem\\Components\\UpdateModal.js":"20","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\repairItem\\Components\\DeleteModal.js":"21","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\repairItem\\Components\\CancelModal.js":"22","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\myRepairs\\components\\UpdateModal.js":"23","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\myRepairs\\components\\OnHoldCard.js":"24","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\myRepairs\\components\\TimeDisplay.js":"25","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\repairItem\\Components\\TimeDisplay.js":"26"},{"size":461,"mtime":1606838660535,"results":"27","hashOfConfig":"28"},{"size":1644,"mtime":1607840152276,"results":"29","hashOfConfig":"28"},{"size":4305,"mtime":1608044909339,"results":"30","hashOfConfig":"28"},{"size":5687,"mtime":1607315704183,"results":"31","hashOfConfig":"28"},{"size":3762,"mtime":1608384321701,"results":"32","hashOfConfig":"28"},{"size":149,"mtime":1606841822039,"results":"33","hashOfConfig":"28"},{"size":167,"mtime":1607446518674,"results":"34","hashOfConfig":"28"},{"size":1984,"mtime":1608560258855,"results":"35","hashOfConfig":"28"},{"size":362,"mtime":499162500000,"results":"36","hashOfConfig":"28"},{"size":13193,"mtime":1608571337050,"results":"37","hashOfConfig":"28"},{"size":1857,"mtime":1607517276137,"results":"38","hashOfConfig":"28"},{"size":1216,"mtime":1608051914095,"results":"39","hashOfConfig":"28"},{"size":6381,"mtime":1608448829555,"results":"40","hashOfConfig":"28"},{"size":1257,"mtime":1607844648016,"results":"41","hashOfConfig":"28"},{"size":1132,"mtime":1608447512209,"results":"42","hashOfConfig":"28"},{"size":9372,"mtime":1608565366036,"results":"43","hashOfConfig":"28"},{"size":4879,"mtime":1608448756553,"results":"44","hashOfConfig":"28"},{"size":757,"mtime":1608050561239,"results":"45","hashOfConfig":"28"},{"size":548,"mtime":1608447063674,"results":"46","hashOfConfig":"28"},{"size":2573,"mtime":1608456894640,"results":"47","hashOfConfig":"28"},{"size":843,"mtime":1608052403646,"results":"48","hashOfConfig":"28"},{"size":1676,"mtime":1608451915925,"results":"49","hashOfConfig":"28"},{"size":1766,"mtime":1608456943333,"results":"50","hashOfConfig":"28"},{"size":354,"mtime":1608393370420,"results":"51","hashOfConfig":"28"},{"size":2485,"mtime":1608572660575,"results":"52","hashOfConfig":"28"},{"size":3268,"mtime":1608572627661,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1m3p4pi",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\index.js",[],["111","112"],"C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\routes.js",[],"C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\login\\index.js",[],"C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\register\\index.js",["113"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { SessionContext } from \"../../session-context\";\r\nimport { Button, Form, Row, Col } from \"react-bootstrap\";\r\nimport api from \"../../services/api\";\r\n\r\nconst RegisterPage = ({ history }) => {\r\n  const { isLoggedIn } = useContext(SessionContext);\r\n\r\n  useEffect(() => {\r\n    if (isLoggedIn) history.push(\"/\");\r\n    // eslint-disable-next-line\r\n  }, []);\r\n  const [register, setRegister] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    password: \"\",\r\n    email: \"\",\r\n    type: \"\",\r\n    hasError: false,\r\n    errorMessage: \"\",\r\n    success: \"\",\r\n    link: \"\",\r\n  });\r\n  const handleChange = (event) => {\r\n    const { value, name } = event.target;\r\n    setRegister({ ...register, [name]: value });\r\n  };\r\n  const handleLogin = () => {\r\n    history.push(\"/login\");\r\n  };\r\n  const handleRegister = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const { firstName, lastName, password, email, type } = register;\r\n      if (!firstName || !lastName || !password || !email || !type) {\r\n        return setRegister({\r\n          ...register,\r\n          hasError: true,\r\n          errorMessage: \"Missing required infromation!\",\r\n          success: false,\r\n          link: \"\",\r\n        });\r\n      }\r\n\r\n      const response = await api.post(\"/user/create\", {\r\n        firstName,\r\n        lastName,\r\n        email,\r\n        password,\r\n        type,\r\n      });\r\n      setRegister({\r\n        ...register,\r\n        hasError: false,\r\n        errorMessage: \"\",\r\n        success: true,\r\n        link: \"\",\r\n      });\r\n      setTimeout(() => history.push(\"/login\"), 2000);\r\n    } catch (error) {\r\n      console.log(error.response.data.message);\r\n      setRegister({\r\n        ...register,\r\n        hasError: true,\r\n        errorMessage: \"Email already exists!\",\r\n        link: \"Sign up\",\r\n        success: false,\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Row className=\"register justify-content-around align-items-center h-100\">\r\n        <Col\r\n          md={12}\r\n          lg={6}\r\n          className=\"order-2 order-lg-1 border rounded p-5 shadow\"\r\n        >\r\n          <Form onSubmit={handleRegister} className=\"mx-auto\">\r\n            <Row>\r\n              <Col>\r\n                <Form.Group inline=\"true\" controlId=\"firstName\">\r\n                  <Form.Control\r\n                    onChange={handleChange}\r\n                    value={register.firstName}\r\n                    required\r\n                    name=\"firstName\"\r\n                    type=\"text\"\r\n                    placeholder=\"Firstname\"\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col>\r\n                <Form.Group inline=\"true\" controlId=\"lastName\">\r\n                  <Form.Control\r\n                    onChange={handleChange}\r\n                    value={register.lastName}\r\n                    required\r\n                    name=\"lastName\"\r\n                    type=\"text\"\r\n                    placeholder=\"Lastname\"\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n            <Form.Group inline=\"true\" controlId=\"email\">\r\n              <Form.Control\r\n                required\r\n                onChange={handleChange}\r\n                value={register.email}\r\n                name=\"email\"\r\n                type=\"email\"\r\n                placeholder=\"Email\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group inline=\"true\" controlId=\"password\">\r\n              <Form.Control\r\n                required\r\n                onChange={handleChange}\r\n                value={register.password}\r\n                name=\"password\"\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"type\" className=\"text-center\">\r\n              <select\r\n                className=\"form-control border-bottom\"\r\n                name=\"type\"\r\n                value={register.type}\r\n                onChange={handleChange}\r\n                required\r\n              >\r\n                <option value=\"\" default>\r\n                  Please select Account type...\r\n                </option>\r\n                <option value=\"USER\">User</option>\r\n                <option value=\"TECH\">Technician</option>\r\n              </select>\r\n            </Form.Group>\r\n            <Form.Group className=\"text-center w-50 mx-auto\">\r\n              <Button\r\n                variant=\"warning\"\r\n                type=\"submit\"\r\n                className=\"btn-block w-30 rounded-pill\"\r\n              >\r\n                Sign up\r\n              </Button>\r\n              <Button\r\n                variant=\"secondary\"\r\n                className=\"btn-block w-30 rounded-pill\"\r\n                onClick={handleLogin}\r\n              >\r\n                Sign in\r\n              </Button>\r\n            </Form.Group>\r\n\r\n            <Form.Text className=\"status font-weight-bold position-absolute text-danger text-center\">\r\n              {register.hasError ? register.errorMessage : \"\"}\r\n              {register.link ? <a href=\"/login\"> Sign in instead?</a> : \"\"}\r\n            </Form.Text>\r\n            <Form.Text className=\"status font-weight-bold position-absolute text-success text-center\">\r\n              {register.success\r\n                ? \"Success! Redirecting to Sign in page...\"\r\n                : \"\"}\r\n            </Form.Text>\r\n          </Form>\r\n        </Col>\r\n        <Col md={12} lg={6} className=\"text-center order-1 order-lg-2\">\r\n          <h1>Sign up</h1>\r\n          <p>Please register first to continue.</p>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\nexport default RegisterPage;\r\n","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\repair\\index.js",["114","115"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { SessionContext } from \"../../session-context\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Spinner,\r\n  DropdownButton,\r\n  Dropdown,\r\n  ButtonGroup,\r\n  InputGroup,\r\n  FormControl,\r\n} from \"react-bootstrap\";\r\nimport RepairCard from \"./components/RepairCard\";\r\nimport { MdSearch } from \"react-icons/md\";\r\nimport api from \"../../services/api\";\r\nimport \"./index.css\";\r\n\r\nconst RepairPage = ({ history }) => {\r\n  const { isLoggedIn } = useContext(SessionContext);\r\n  const [repairs, setRepairs] = useState(null);\r\n  const token = localStorage.getItem(\"token\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [filter, setFilter] = useState(\"All\");\r\n\r\n  useEffect(() => {\r\n    if (!isLoggedIn) return history.push(\"/login\");\r\n    getRepairs();\r\n  }, [filter]);\r\n\r\n  const getRepairs = async () => {\r\n    setLoading(true);\r\n    api\r\n      .get(`/requests/all/${filter === \"All\" ? \"\" : filter.toUpperCase()}`, {\r\n        headers: { \"auth-token\": token },\r\n      })\r\n      .then((response) => {\r\n        setRepairs(response.data);\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        setRepairs(null);\r\n        setLoading(false);\r\n        console.log(error);\r\n      });\r\n  };\r\n  const handleClick = (id) => {\r\n    history.push(\"/repairs/\" + id);\r\n  };\r\n  const handleSelect = (key, event) => {\r\n    setFilter(event.target.innerText);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"justify-content-between\">\r\n        <Col sm={3}>\r\n          <ButtonGroup className=\"mb-1 mb-sm-0 w-100\">\r\n            <DropdownButton\r\n              as={ButtonGroup}\r\n              title={filter}\r\n              variant=\"outline-primary\"\r\n              id=\"bg-nested-dropdown\"\r\n              onSelect={handleSelect}\r\n              className=\"w-50\"\r\n            >\r\n              <Dropdown.Item>All</Dropdown.Item>\r\n              <Dropdown.Item>Incoming</Dropdown.Item>\r\n              <Dropdown.Item>Received</Dropdown.Item>\r\n              <Dropdown.Item>Ongoing</Dropdown.Item>\r\n              <Dropdown.Item>On hold</Dropdown.Item>\r\n              <Dropdown.Item>Outgoing</Dropdown.Item>\r\n              <Dropdown.Item>Completed</Dropdown.Item>\r\n              <Dropdown.Item>Cancelled</Dropdown.Item>\r\n            </DropdownButton>\r\n          </ButtonGroup>\r\n        </Col>\r\n        <Col sm={4}>\r\n          <InputGroup className=\"ml-1\">\r\n            <FormControl\r\n              type=\"text\"\r\n              placeholder=\"search\"\r\n              aria-label=\"Input group example\"\r\n              aria-describedby=\"btnGroupAddon2\"\r\n            />\r\n            <InputGroup.Append>\r\n              <InputGroup.Text id=\"btnGroupAddon2\">\r\n                <MdSearch />\r\n              </InputGroup.Text>\r\n            </InputGroup.Append>\r\n          </InputGroup>\r\n        </Col>\r\n      </Row>\r\n      {!loading && repairs ? (\r\n        <Row className=\"row-cols-xl-4 row-cols-lg-3 row-cols-sm-2 row-cols-1\">\r\n          {repairs.map((repair) => (\r\n            <Col key={repair._id}>\r\n              <RepairCard data={repair} handleClick={handleClick} />\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      ) : loading ? (\r\n        <Row>\r\n          <Col>\r\n            <div className=\"text-center text-muted\">\r\n              <p>Loading Queue...</p>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      ) : (\r\n        <Row>\r\n          <Col>\r\n            <div className=\"text-center\">\r\n              There are no\r\n              <span className=\"\">\r\n                {\" \"}\r\n                {filter === \"All\" ? \"\" : filter.toLowerCase() + \" \"}\r\n              </span>\r\n              requests for now.\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RepairPage;\r\n","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\App.js",[],"C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\services\\api.js",[],"C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\components\\TopNav.js",["116"],"C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\repairItem\\index.js",["117","118","119"],"C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\repair\\components\\RepairCard.js",["120","121"],"C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\session-context.js",[],"C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\myRequests\\index.js",["122","123"],"import React, { useContext, useEffect, useState, useMemo } from \"react\";\r\nimport { Row, Col, Button, Spinner } from \"react-bootstrap\";\r\nimport { MdAddToQueue } from \"react-icons/md\";\r\nimport api from \"../../services/api\";\r\nimport { SessionContext } from \"../../session-context\";\r\nimport RequestRow from \"./components/RequestRow\";\r\nimport RequestModal from \"./components/RequestModal\";\r\nimport \"./index.css\";\r\n\r\nconst MyRequestsPage = ({ history }) => {\r\n  const { isLoggedIn } = useContext(SessionContext);\r\n  const [show, setShow] = useState(false);\r\n  const [form, setForm] = useState({\r\n    device: \"\",\r\n    issue: \"\",\r\n    image: null,\r\n    expedite: \"No\",\r\n  });\r\n  const [requests, setRequests] = useState(null);\r\n  const [state, setState] = useState({\r\n    hasError: false,\r\n    errorMessage: \"\",\r\n    uploading: false,\r\n    loading: false,\r\n  });\r\n  const token = localStorage.getItem(\"token\");\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  useEffect(() => {\r\n    if (!isLoggedIn) return history.push(\"/login\");\r\n    getRepairs();\r\n  }, []);\r\n\r\n  const preview = useMemo(() => {\r\n    return form.image ? URL.createObjectURL(form.image) : null;\r\n  }, [form.image]);\r\n  const handleChange = (event) => {\r\n    const { value, name, files } = event.target;\r\n    if (files) return setForm({ ...form, [name]: files[0] });\r\n    setForm({ ...form, [name]: value });\r\n  };\r\n  const handleClick = (id) => {\r\n    history.push(\"/repairs/\" + id);\r\n  };\r\n  const handleSort = (event) => {\r\n    if (requests) {\r\n      const property = event.target.textContent.toLowerCase();\r\n      const compare = (a, b) => {\r\n        if (property === \"type\") {\r\n          return b.expedite - a.expedite;\r\n        }\r\n        if (property === \"update\") {\r\n          return new Date(b.lastUpdate) - new Date(a.lastUpdate);\r\n        }\r\n        if (a[property].toLowerCase() < b[property].toLowerCase()) return -1;\r\n        if (a[property].toLowerCase() > b[property].toLowerCase()) return 1;\r\n        return 0;\r\n      };\r\n      const sorted = [...requests].sort(compare);\r\n      setRequests([...sorted]);\r\n    }\r\n  };\r\n  const handleSubmit = async () => {\r\n    const repairData = new FormData();\r\n\r\n    try {\r\n      if (form.device && form.issue && form.image) {\r\n        repairData.append(\"device\", form.device);\r\n        repairData.append(\"customer\", user._id);\r\n        repairData.append(\"issue\", form.issue);\r\n        repairData.append(\"image\", form.image);\r\n        repairData.append(\"expedite\", form.expedite);\r\n        setState({\r\n          loading: false,\r\n          hasError: false,\r\n          uploading: true,\r\n          errorMessage: \"\",\r\n        });\r\n        api\r\n          .post(\"/requests/create\", repairData, {\r\n            headers: { \"auth-token\": token },\r\n          })\r\n          .then(\r\n            (value) => {\r\n              setState({\r\n                hasError: false,\r\n                errorMessage: \"\",\r\n                uploading: false,\r\n                loading: false,\r\n              });\r\n              getRepairs();\r\n              setShow(false);\r\n              setForm({ device: \"\", issue: \"\", image: null, expedite: \"No\" });\r\n            },\r\n            (error) => {\r\n              console.log(error);\r\n              setState({\r\n                loading: false,\r\n                uploading: false,\r\n                hasError: true,\r\n                errorMessage: error.response.data,\r\n              });\r\n            }\r\n          );\r\n      } else {\r\n        setState({\r\n          loading: false,\r\n          uploading: false,\r\n          hasError: true,\r\n          errorMessage: \"Missing required Information!\",\r\n        });\r\n      }\r\n    } catch (error) {\r\n      setState({\r\n        loading: false,\r\n        uploading: false,\r\n        hasError: true,\r\n        errorMessage: error.response.data,\r\n      });\r\n    }\r\n  };\r\n  const handleHide = () => {\r\n    setState({\r\n      uploading: false,\r\n      hasError: false,\r\n      errorMessage: \"\",\r\n      loading: false,\r\n    });\r\n    setForm({ device: \"\", issue: \"\", image: null, expedite: \"No\" });\r\n    setShow(false);\r\n  };\r\n  const getRepairs = async () => {\r\n    setState({ ...state, loading: true });\r\n    try {\r\n      const response = await api.get(\"/user/requests/\", {\r\n        headers: { \"auth-token\": token },\r\n      });\r\n      setRequests(response.data.reverse());\r\n      setState({ ...state, loading: false });\r\n    } catch (error) {\r\n      setState({ ...state, loading: false });\r\n      console.log(error);\r\n    }\r\n  };\r\n  return (\r\n    <Row className=\"flex-column h-100\">\r\n      <Col className=\"flex-grow-0\">\r\n        <Button\r\n          onClick={() => setShow(true)}\r\n          className=\"new-request d-block ml-auto mb-2 rounded-pill\"\r\n        >\r\n          Create New <MdAddToQueue className=\"ml-1\" />\r\n        </Button>\r\n        <RequestModal\r\n          show={show}\r\n          onHide={handleHide}\r\n          handleChange={handleChange}\r\n          handleSubmit={handleSubmit}\r\n          state={state}\r\n          form={form}\r\n          preview={preview}\r\n        />\r\n      </Col>\r\n\r\n      <Col className=\"col-table-myRequests flex-grow-1\">\r\n        <div className=\"table-div-myRequests table-responsive-lg h-100\">\r\n          <table className=\"table myRequests table-hover text-center\">\r\n            <thead>\r\n              <tr onClick={handleSort}>\r\n                <th>Device</th>\r\n                <th>Issue</th>\r\n                <th>Type</th>\r\n                <th>Status</th>\r\n                <th>Update</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {!state.loading && requests ? (\r\n                requests.map((request) => (\r\n                  <RequestRow\r\n                    handleClick={handleClick}\r\n                    key={request._id}\r\n                    data={request}\r\n                  />\r\n                ))\r\n              ) : state.loading ? (\r\n                <tr>\r\n                  <td colSpan=\"5\">\r\n                    <span className=\"text-muted\">Loading your requests...</span>\r\n                  </td>\r\n                </tr>\r\n              ) : (\r\n                <tr>\r\n                  <td colSpan=\"5\">\r\n                    <span>You have no request.</span>\r\n                  </td>\r\n                </tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default MyRequestsPage;\r\n","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\myRequests\\components\\RequestRow.js",["124","125","126"],"C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\myRepairs\\components\\RequestRow.js",["127","128","129"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport moment from \"moment\";\r\nimport { SessionContext } from \"../../../session-context\";\r\n\r\nconst RequestRow = ({ data, handleClick, setShow }) => {\r\n  const { statusColor } = useContext(SessionContext);\r\n\r\n  const newDate = (date) => {\r\n    const original = moment(date);\r\n    return original.format(\"l, h:mm a\");\r\n  };\r\n\r\n  return (\r\n    <tr\r\n      className=\"tr-myRepairs\"\r\n      onClick={\r\n        data.repair ? () => handleClick(data.repair._id) : () => setShow(true)\r\n      }\r\n      title={!data.repair ? \"Request has been deleted\" : \"\"}\r\n    >\r\n      <td>\r\n        <img\r\n          src={\r\n            data.repair\r\n              ? data.repair.image_url\r\n              : require(\"../../../assets/no_image.png\").default\r\n          }\r\n        />\r\n        <span>{data.device}</span>\r\n      </td>\r\n      <td>{newDate(data.date)}</td>\r\n      <td className={`font-weight-bold text-${statusColor(data.status)}`}>\r\n        {data.status}\r\n      </td>\r\n      <td>\r\n        <span>{data.note}</span>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\nexport default React.memo(RequestRow);\r\n","C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\myRepairs\\index.js",["130","131"],"C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\myRequests\\components\\RequestModal.js",[],"C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\repairItem\\Components\\HistoryRow.js",[],"C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\myRepairs\\components\\Alert.js",[],"C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\repairItem\\Components\\UpdateModal.js",[],"C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\repairItem\\Components\\DeleteModal.js",[],"C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\repairItem\\Components\\CancelModal.js",[],"C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\myRepairs\\components\\UpdateModal.js",[],"C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\myRepairs\\components\\OnHoldCard.js",[],"C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\myRepairs\\components\\TimeDisplay.js",["132","133"],"C:\\Users\\Buts\\Desktop\\port\\Repair Management\\frontend\\src\\pages\\repairItem\\Components\\TimeDisplay.js",["134","135"],{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","severity":1,"message":"141","line":45,"column":13,"nodeType":"142","messageId":"143","endLine":45,"endColumn":21},{"ruleId":"140","severity":1,"message":"144","line":6,"column":3,"nodeType":"142","messageId":"143","endLine":6,"endColumn":10},{"ruleId":"145","severity":1,"message":"146","line":28,"column":6,"nodeType":"147","endLine":28,"endColumn":14,"suggestions":"148"},{"ruleId":"140","severity":1,"message":"149","line":1,"column":29,"nodeType":"142","messageId":"143","endLine":1,"endColumn":38},{"ruleId":"140","severity":1,"message":"150","line":1,"column":50,"nodeType":"142","messageId":"143","endLine":1,"endColumn":60},{"ruleId":"140","severity":1,"message":"151","line":6,"column":10,"nodeType":"142","messageId":"143","endLine":6,"endColumn":29},{"ruleId":"145","severity":1,"message":"152","line":42,"column":6,"nodeType":"147","endLine":42,"endColumn":8,"suggestions":"153"},{"ruleId":"140","severity":1,"message":"154","line":1,"column":17,"nodeType":"142","messageId":"143","endLine":1,"endColumn":25},{"ruleId":"140","severity":1,"message":"155","line":8,"column":9,"nodeType":"142","messageId":"143","endLine":8,"endColumn":16},{"ruleId":"140","severity":1,"message":"144","line":2,"column":28,"nodeType":"142","messageId":"143","endLine":2,"endColumn":35},{"ruleId":"145","severity":1,"message":"146","line":31,"column":6,"nodeType":"147","endLine":31,"endColumn":8,"suggestions":"156"},{"ruleId":"140","severity":1,"message":"154","line":1,"column":29,"nodeType":"142","messageId":"143","endLine":1,"endColumn":37},{"ruleId":"140","severity":1,"message":"157","line":2,"column":10,"nodeType":"142","messageId":"143","endLine":2,"endColumn":16},{"ruleId":"158","severity":1,"message":"159","line":16,"column":11,"nodeType":"160","endLine":16,"endColumn":73},{"ruleId":"140","severity":1,"message":"149","line":1,"column":29,"nodeType":"142","messageId":"143","endLine":1,"endColumn":38},{"ruleId":"140","severity":1,"message":"154","line":1,"column":40,"nodeType":"142","messageId":"143","endLine":1,"endColumn":48},{"ruleId":"161","severity":1,"message":"162","line":22,"column":9,"nodeType":"160","endLine":28,"endColumn":11},{"ruleId":"140","severity":1,"message":"163","line":17,"column":8,"nodeType":"142","messageId":"143","endLine":17,"endColumn":18},{"ruleId":"145","severity":1,"message":"164","line":43,"column":6,"nodeType":"147","endLine":43,"endColumn":8,"suggestions":"165"},{"ruleId":"145","severity":1,"message":"166","line":13,"column":6,"nodeType":"147","endLine":13,"endColumn":8,"suggestions":"167"},{"ruleId":"145","severity":1,"message":"166","line":23,"column":6,"nodeType":"147","endLine":23,"endColumn":14,"suggestions":"168"},{"ruleId":"145","severity":1,"message":"166","line":8,"column":32,"nodeType":"147","endLine":8,"endColumn":34,"suggestions":"169"},{"ruleId":"145","severity":1,"message":"166","line":12,"column":6,"nodeType":"147","endLine":12,"endColumn":14,"suggestions":"170"},"no-native-reassign",["171"],"no-negated-in-lhs",["172"],"no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","'Spinner' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getRepairs', 'history', and 'isLoggedIn'. Either include them or remove the dependency array.","ArrayExpression",["173"],"'useEffect' is defined but never used.","'useReducer' is defined but never used.","'FaRegQuestionCircle' is defined but never used.","React Hook useEffect has missing dependencies: 'getRepair', 'history', 'isLoggedIn', and 'state'. Either include them or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.",["174"],"'useState' is defined but never used.","'history' is assigned a value but never used.",["175"],"'Button' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'OnHoldCard' is defined but never used.","React Hook useEffect has missing dependencies: 'getRepair', 'getTransactions', 'history', 'isLoggedIn', and 'user.type'. Either include them or remove the dependency array.",["176"],"React Hook useEffect has a missing dependency: 'getRepair'. Either include it or remove the dependency array.",["177"],["178"],["179"],["180"],"no-global-assign","no-unsafe-negation",{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},{"desc":"185","fix":"186"},{"desc":"187","fix":"188"},{"desc":"189","fix":"190"},{"desc":"191","fix":"192"},{"desc":"189","fix":"193"},{"desc":"191","fix":"194"},"Update the dependencies array to be: [filter, getRepairs, history, isLoggedIn]",{"range":"195","text":"196"},"Update the dependencies array to be: [getRepair, history, isLoggedIn, state]",{"range":"197","text":"198"},"Update the dependencies array to be: [getRepairs, history, isLoggedIn]",{"range":"199","text":"200"},"Update the dependencies array to be: [getRepair, getTransactions, history, isLoggedIn, user.type]",{"range":"201","text":"202"},"Update the dependencies array to be: [getRepair]",{"range":"203","text":"204"},"Update the dependencies array to be: [getRepair, repair]",{"range":"205","text":"206"},{"range":"207","text":"204"},{"range":"208","text":"206"},[813,821],"[filter, getRepairs, history, isLoggedIn]",[1610,1612],"[getRepair, history, isLoggedIn, state]",[1060,1062],"[getRepairs, history, isLoggedIn]",[1432,1434],"[getRepair, getTransactions, history, isLoggedIn, user.type]",[354,356],"[getRepair]",[554,562],"[getRepair, repair]",[341,343],[476,484]]